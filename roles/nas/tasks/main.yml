---

- name: Ensure mergerfs and snapraid packages are installed
  ansible.builtin.apt:
    name:
      - mergerfs
      - snapraid
    state: present
    update_cache: yes
  become: true

# --- Prepare data drives for MergerFS ---
- name: Create mount points for data disks
  ansible.builtin.file:
    path: "{{ item.mount }}"
    state: directory
    mode: '0755'
  loop: "{{ mergefs_branches }}"
  become: true

- name: Mount data disks and persist them to /etc/fstab
  ansible.builtin.mount:
    path: "{{ item.mount }}"
    src: "{{ item.device }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ item.options }}"
    state: mounted
  loop: "{{ mergefs_branches }}"
  become: true

# --- Configure MergerFS pool ---
- name: Ensure mergerfs pool mount point exists
  ansible.builtin.file:
    path: "{{ mergefs_pool_mount }}"
    state: directory
    mode: '0755'
  become: true

- name: Mount mergerfs pool and persist in fstab
  ansible.builtin.mount:
    path: "{{ mergefs_pool_mount }}"
    src: "{{ mergefs_branches | map(attribute='mount') | join(':') }}"
    fstype: "fuse.mergerfs"
    opts: "{{ mergefs_options }}"
    state: mounted

# --- Configure SnapRAID ---
- name: Ensure SnapRAID configuration directory exists
  ansible.builtin.file:
    path: "{{ snapraid_conf_dir }}"
    state: directory
    mode: '0755'
  become: true

- name: Deploy snapraid.conf for each array
  ansible.builtin.template:
    src: "snapraid.conf.j2"
    dest: "{{ snapraid_conf_dir }}/snapraid_{{ item.name }}.conf"
    mode: '0644'
  loop: "{{ snapraid_arrays }}"
  become: true

# --- Schedule SnapRAID sync/scrub ---
- name: Create cron jobs for SnapRAID sync and scrub
  ansible.builtin.cron:
    name: "snapraid sync for {{ item.name }}"
    minute: "{{ entry.sync_schedule.split()[0] }}"
    hour:   "{{ entry.sync_schedule.split()[1] }}"
    day:    "{{ entry.sync_schedule.split()[2] }}"
    month:  "{{ entry.sync_schedule.split()[3] }}"
    weekday: "{{ entry.sync_schedule.split()[4] }}"
    job: >-
      /usr/bin/snapraid -c {{ snapraid_conf_dir }}/snapraid_{{ item.name }}.conf sync &&
      /usr/bin/snapraid -c {{ snapraid_conf_dir }}/snapraid_{{ item.name }}.conf scrub
      -p {{ entry.scrub_percent }} -a {{ entry.scrub_age }}
    user: root
  loop: "{{ snapraid_arrays }}"
  loop_control:
    loop_var: item
  vars:
    entry: "{{ item.snapraid_sync[0] }}"
  become: true

# --- Configure Samba ---
- name: Install Samba packages
  ansible.builtin.package:
    name:
      - samba
      - samba-common-bin
    state: present
  become: true

- name: Ensure Emulation share directory exists
  ansible.builtin.file:
    path: "{{ nas_samba_share_path }}"
    state: directory
    owner: root
    group: root
    mode: "0775"
  become: true

- name: Add Samba share to smb.conf
  ansible.builtin.blockinfile:
    path: /etc/samba/smb.conf
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK: NAS Emulation share"
    block: |
      [{{ nas_samba_share_name }}]
        path = {{ nas_samba_share_path }}
        browseable = {{ 'yes' if nas_samba_browseable else 'no' }}
        read only = {{ 'yes' if nas_samba_read_only else 'no' }}
        guest ok = {{ 'yes' if nas_samba_guest_ok else 'no' }}
        create mask = 0664
        directory mask = 0775
  notify: Restart Samba
  become: true

- name: Ensure smbd is enabled and running
  ansible.builtin.service:
    name: smbd
    enabled: true
    state: started
  become: true

- name: Ensure nmbd is enabled and running (if present)
  ansible.builtin.service:
    name: nmbd
    enabled: true
    state: started
  ignore_errors: true
  become: true
